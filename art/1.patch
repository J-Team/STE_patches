From fc849c72a403f952f6b292682f6c9a0b0150cce8 Mon Sep 17 00:00:00 2001
From: Ricardo Cerqueira <cyanogenmod@cerqueira.org>
Date: Fri, 8 Nov 2013 02:21:54 +0000
Subject: [PATCH] runtime: Add support for dexroot-on-cache

If installd puts the dex files there, we want to read/write our oat
files out of there, too

Change-Id: I7da528622d7c855431dd99b20ff54da791bc1681
---
 runtime/Android.mk |    3 +++
 runtime/utils.cc   |   28 ++++++++++++++++++++++++++++
 2 files changed, 31 insertions(+)

diff --git a/runtime/Android.mk b/runtime/Android.mk
index a0ae4bf..24dfa3f 100644
--- a/runtime/Android.mk
+++ b/runtime/Android.mk
@@ -307,6 +307,9 @@ $$(ENUM_OPERATOR_OUT_GEN): $$(GENERATED_SRC_DIR)/%_operator_out.cc : $(LOCAL_PAT
   ifeq ($$(art_target_or_host),target)
     LOCAL_CLANG := $(ART_TARGET_CLANG)
     LOCAL_CFLAGS += $(ART_TARGET_CFLAGS)
+    ifneq ($(TARGET_BUILD_VARIANT),user)
+      LOCAL_CFLAGS += -DALLOW_DEXROOT_ON_CACHE
+    endif
   else # host
     LOCAL_CLANG := $(ART_HOST_CLANG)
     LOCAL_CFLAGS += $(ART_HOST_CFLAGS)
diff --git a/runtime/utils.cc b/runtime/utils.cc
index bf36bf3..8aabd15 100644
--- a/runtime/utils.cc
+++ b/runtime/utils.cc
@@ -56,6 +56,10 @@
 #include <linux/unistd.h>
 #endif
 
+#ifdef ALLOW_DEXROOT_ON_CACHE
+#include <cutils/properties.h>
+#endif
+
 namespace art {
 
 pid_t GetTid() {
@@ -1172,6 +1176,25 @@ const char* GetAndroidData() {
   return android_data;
 }
 
+#ifdef ALLOW_DEXROOT_ON_CACHE
+const char* GetAndroidCache() {
+  const char* android_cache = getenv("ANDROID_CACHE");
+  if (android_cache == NULL) {
+    if (OS::DirectoryExists("/cache")) {
+      android_cache = "/cache";
+    } else {
+      LOG(FATAL) << "ANDROID_CACHE not set and /cache does not exist";
+      return "";
+    }
+  }
+  if (!OS::DirectoryExists(android_cache)) {
+    LOG(FATAL) << "Failed to find ANDROID_CACHE directory " << android_cache;
+    return "";
+  }
+  return android_cache;
+}
+#endif
+
 std::string GetDalvikCacheOrDie(const char* android_data) {
   std::string dalvik_cache(StringPrintf("%s/dalvik-cache", android_data));
 
@@ -1192,6 +1215,11 @@ std::string GetDalvikCacheOrDie(const char* android_data) {
 
 std::string GetDalvikCacheFilenameOrDie(const std::string& location) {
   std::string dalvik_cache(GetDalvikCacheOrDie(GetAndroidData()));
+#ifdef ALLOW_DEXROOT_ON_CACHE
+  if (StartsWith(location, "/system")) {
+      dalvik_cache = GetDalvikCacheOrDie(GetAndroidCache());
+  }
+#endif
   if (location[0] != '/') {
     LOG(FATAL) << "Expected path in location to be absolute: "<< location;
   }
-- 
1.7.10.4

